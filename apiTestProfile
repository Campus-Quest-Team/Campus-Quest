#!/bin/bash

# A script to test the profile update workflow.
# It logs in, gets the profile, updates the PFP, and updates the display name/bio.

# --- Configuration ---
API_BASE_URL="http://localhost:5001/api"
PROFILE_URL="$API_BASE_URL/getProfile"
EDIT_PFP_URL="$API_BASE_URL/editPFP"
EDIT_PROFILE_URL="$API_BASE_URL/editProfile"
LOGIN_SCRIPT="./apiTestLogin.sh"
PFP_FILE_PATH="frontend/public/image.png"
NEW_DISPLAY_NAME="New Name"
NEW_BIO="New Bio"

# --- Step 1: Login to get JWT by sourcing the login script ---
echo "Attempting to log in to get a session token..."

# Check if login script exists
if [ ! -f "$LOGIN_SCRIPT" ]; then
    echo "Error: Login script not found at '$LOGIN_SCRIPT'"
    exit 1
fi

# Source the script to get USER_ID and JWT_TOKEN.
source "$LOGIN_SCRIPT"

if [ -z "$JWT_TOKEN" ] || [ -z "$USER_ID" ]; then
    echo "Failed to obtain JWT token or User ID from login script."
    exit 1
fi

# Use the User ID from the login script
TARGET_USER_ID=$USER_ID

echo "Login successful. Token and User ID ($TARGET_USER_ID) obtained."
echo "-----------------------------------"
echo ""

# --- Step 2: Call getProfile ---
echo "Fetching initial profile for user ID: $TARGET_USER_ID..."
profile_response=$(curl -s -X POST \
  -H "Content-Type: application/json" \
  -d "{\"userId\":\"$TARGET_USER_ID\", \"jwtToken\":\"$JWT_TOKEN\"}" \
  $PROFILE_URL)

profile_error=$(echo "$profile_response" | jq -r '.error')
if [ "$profile_error" != "null" ] && [ ! -z "$profile_error" ]; then
    echo "Failed to get profile: $profile_error"
fi

echo "Initial profile data received:"
echo "$profile_response" | jq '.profileData'
echo "-----------------------------------"
echo ""


# --- Step 3: Call editPFP ---
echo "Attempting to update profile picture for user ID: $TARGET_USER_ID..."
echo "Using image: $PFP_FILE_PATH"

# Check if test image exists
if [ ! -f "$PFP_FILE_PATH" ]; then
    echo "Error: Test image not found at '$PFP_FILE_PATH'"
    exit 1
fi

edit_pfp_response=$(curl -s -X POST \
  -F "file=@$PFP_FILE_PATH" \
  -F "userId=$TARGET_USER_ID" \
  -F "jwtToken=$JWT_TOKEN" \
  $EDIT_PFP_URL)

edit_pfp_error=$(echo "$edit_pfp_response" | jq -r '.error')
if [ "$edit_pfp_error" != "null" ] && [ ! -z "$edit_pfp_error" ]; then
    echo "Failed to edit PFP: $edit_pfp_error"
    echo "Raw response: $edit_pfp_response"
    exit 1
fi

echo "editPFP response:"
echo "$edit_pfp_response" | jq '.'


# --- Step 4: Call editProfile ---
echo ""
echo "-----------------------------------"
echo "Attempting to update display name and bio..."

edit_profile_response=$(curl -s -X POST \
  -H "Content-Type: application/json" \
  -d "{\"userId\":\"$TARGET_USER_ID\", \"displayName\":\"$NEW_DISPLAY_NAME\", \"bio\":\"$NEW_BIO\", \"jwtToken\":\"$JWT_TOKEN\"}" \
  $EDIT_PROFILE_URL)

echo "editProfile response:"
echo "$edit_profile_response" | jq '.'

if [ $? -ne 0 ]; then
    echo "Error: Failed to parse editProfile response with jq."
    echo "Raw response: $edit_profile_response"
    exit 1
fi


echo ""
echo "Script finished." 